[
    {
        "title": "$:/plugins/oeyoews/book-status",
        "type": "application/json",
        "text": "{\"tiddlers\":{\"$:/plugins/oeyoews/book-status/readme\":{\"title\":\"$:/plugins/oeyoews/book-status/readme\",\"text\":\"## book status\\n\\n* [x] getstorytiddler\\n* [x] click event\\n* [x] status json\\n* [x] 如何获取每个笔记的书名, 通过sourceTiddler, 或者获取tag, 每本书只有一个tag\\n* [ ] viewtemplate(filter: $:/plugins/books/) 也许可以做成viewtoolbar, 但是不够醒目\\n* [ ] 也许可以借助localstorage当作临时状态(), 最后结束是, 询问是否要保存此次阅读记录, 通知阅读时间\\n* [ ] 支持待看状态\\n* [ ] 每本书一个配置文件, 目前是一个文件\",\"type\":\"text/markdown\",\"description\":\"book-status\"},\"$:/plugins/oeyoews/book-status/mergeObj.js\":{\"title\":\"$:/plugins/oeyoews/book-status/mergeObj.js\",\"text\":\"/*\\\\\\r\\ntitle: $:/plugins/oeyoews/book-status/mergeObj.js\\r\\ntype: application/javascript\\r\\nmodule-type: library\\r\\n\\r\\n\\\\*/\\r\\nmodule.exports = function mergeObjects(target, ...sources) {\\r\\n  for (const source of sources) {\\r\\n    for (const key in source) {\\r\\n      if (source.hasOwnProperty(key)) {\\r\\n        if (typeof source[key] === 'object' && !Array.isArray(source[key])) {\\r\\n          // 如果属性值是对象，则递归地合并子对象\\r\\n          if (!target.hasOwnProperty(key) || typeof target[key] !== 'object') {\\r\\n            target[key] = {};\\r\\n          }\\r\\n          mergeObjects(target[key], source[key]);\\r\\n        } else {\\r\\n          // 否则直接复制属性值\\r\\n          target[key] = source[key];\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return target;\\r\\n};\\r\\n\",\"type\":\"application/javascript\",\"module-type\":\"library\"},\"$:/plugins/oeyoews/book-status/viewTemplate\":{\"title\":\"$:/plugins/oeyoews/book-status/viewTemplate\",\"tags\":\"$:/tags/ViewTemplate\",\"text\":\"<$list filter=\\\"[all[current]is[shadow]has[bookname]]\\\">\\r\\n  <$bookstatus />\\r\\n</$list>\\r\\n\"},\"$:/plugins/oeyoews/book-status/widget.js\":{\"title\":\"$:/plugins/oeyoews/book-status/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/book-status/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nbook-status widget\\n\\n\\\\*/\\nconst { widget: Widget } = require('$:/core/modules/widgets/widget.js');\\nconst mergeObj = require('./mergeObj');\\n\\nclass BookStatusWidget extends Widget {\\n  static STATUS_UNREAD = '未读';\\n  static STATUS_READ = '已读';\\n\\n  constructor(parseTreeNode, options) {\\n    super(parseTreeNode, options);\\n    this.configfile = 'bookstatus.json';\\n    this.status = '';\\n  }\\n\\n  render(parent, nextSibling) {\\n    if (!$tw.browser) return;\\n    this.parentDomNode = parent;\\n    this.computeAttributes();\\n    this.execute();\\n\\n    const createElement = $tw.utils.domMaker;\\n    const wiki = $tw.wiki;\\n    const title = this.getVariable('storyTiddler');\\n    const pluginname = wiki.getShadowSource(title);\\n    const { book: bookname } = wiki.getTiddler(pluginname)?.fields || {};\\n    let config = wiki.getTiddlerData(this.configfile) || {};\\n    this.status = config?.[bookname]?.[title] || '未读';\\n\\n    const updateStatus = () => {\\n      // may set map\\n      if (!wiki.tiddlerExists(this.configfile)) {\\n        wiki.addTiddler({\\n          type: 'application/json',\\n          title: 'bookstatus.json',\\n          'meta#disabled': 'yes', // disable meta file\\n          text: '',\\n        });\\n        this.parentWidget.dispatchEvent({\\n          type: 'om-notify',\\n          paramObject: {\\n            title: `create ${this.configfile} config file`,\\n          },\\n        });\\n      }\\n      if (title.startsWith('Draft of') || !pluginname || !bookname) return;\\n      this.status = this.status === '已读' ? '未读' : '已读';\\n      const obj = {\\n        [bookname]: {\\n          [title]: this.status,\\n        },\\n      };\\n      // update book status file\\n      mergeObj(config, obj);\\n      wiki.setText(this.configfile, 'text', null, JSON.stringify(config));\\n      this.parentWidget.dispatchEvent({\\n        type: 'om-notify',\\n        paramObject: {\\n          status:\\n            this.status === BookStatusWidget.STATUS_READ ? 'success' : 'info',\\n          title,\\n          text: `更新状态: ${this.status}`,\\n        },\\n      });\\n      // 刷新\\n      this.refreshSelf();\\n    };\\n\\n    const statusClass =\\n      this.status === BookStatusWidget.STATUS_READ\\n        ? 'text-green-400'\\n        : 'text-rose-400';\\n    const btn = createElement('button', {\\n      text: this.status,\\n      class: `p-2 ${statusClass}`,\\n    });\\n\\n    btn.addEventListener('click', updateStatus);\\n\\n    const domNode = createElement('div', {\\n      class: 'flex justify-end',\\n      children: [btn],\\n    });\\n\\n    parent.insertBefore(domNode, nextSibling);\\n    this.domNodes.push(domNode);\\n  }\\n}\\n\\n/**\\n * @description book-status widget\\n * @param configfilename\\n */\\nexports.bookstatus = BookStatusWidget;\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}",
        "description": "book-status",
        "author": "oeyoews",
        "version": "0.0.1",
        "core-version": ">=5.3.0",
        "plugin-type": "plugin",
        "name": "book-status",
        "meat#disabled": "yes",
        "dependents": "$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus",
        "list": "readme"
    }
]